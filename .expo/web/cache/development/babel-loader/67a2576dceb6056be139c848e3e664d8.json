{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { SwitchRouter, NavigationActions } from '@react-navigation/core';\nimport DrawerActions from \"./DrawerActions\";\n\nfunction withDefaultValue(obj, key, defaultValue) {\n  if (obj.hasOwnProperty(key) && typeof obj[key] !== 'undefined') {\n    return obj;\n  }\n\n  obj[key] = defaultValue;\n  return obj;\n}\n\nvar getActiveRouteKey = function getActiveRouteKey(route) {\n  if (route.routes && route.routes[route.index]) {\n    return getActiveRouteKey(route.routes[route.index]);\n  }\n\n  return route.key;\n};\n\nexport default (function (routeConfigs) {\n  var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  config = _objectSpread({}, config);\n  config = withDefaultValue(config, 'resetOnBlur', config.unmountInactiveRoutes ? true : !!config.resetOnBlur);\n  config = withDefaultValue(config, 'backBehavior', 'initialRoute');\n  var switchRouter = SwitchRouter(routeConfigs, config);\n\n  var __id = -1;\n\n  var genId = function genId() {\n    __id++;\n    return __id;\n  };\n\n  return _objectSpread(_objectSpread({}, switchRouter), {}, {\n    getActionCreators: function getActionCreators(route, navStateKey) {\n      return _objectSpread({\n        openDrawer: function openDrawer() {\n          return DrawerActions.openDrawer({\n            key: navStateKey\n          });\n        },\n        closeDrawer: function closeDrawer() {\n          return DrawerActions.closeDrawer({\n            key: navStateKey\n          });\n        },\n        toggleDrawer: function toggleDrawer() {\n          return DrawerActions.toggleDrawer({\n            key: navStateKey\n          });\n        }\n      }, switchRouter.getActionCreators(route, navStateKey));\n    },\n    getStateForAction: function getStateForAction(action, state) {\n      if (!state) {\n        return _objectSpread(_objectSpread({}, switchRouter.getStateForAction(action, undefined)), {}, {\n          isDrawerOpen: false,\n          isDrawerIdle: true,\n          drawerMovementDirection: null,\n          openId: genId(),\n          closeId: genId(),\n          toggleId: genId()\n        });\n      }\n\n      var isRouterTargeted = action.key == null || action.key === state.key;\n\n      if (isRouterTargeted) {\n        if (action.type === DrawerActions.DRAWER_CLOSED) {\n          return _objectSpread(_objectSpread({}, state), {}, {\n            isDrawerOpen: false,\n            isDrawerIdle: true,\n            drawerMovementDirection: null\n          });\n        }\n\n        if (action.type === DrawerActions.DRAWER_OPENED) {\n          return _objectSpread(_objectSpread({}, state), {}, {\n            isDrawerOpen: true,\n            isDrawerIdle: true,\n            drawerMovementDirection: null\n          });\n        }\n\n        if (action.type === DrawerActions.CLOSE_DRAWER) {\n          return _objectSpread(_objectSpread({}, state), {}, {\n            closeId: genId()\n          });\n        }\n\n        if (action.type === DrawerActions.MARK_DRAWER_SETTLING) {\n          return _objectSpread(_objectSpread({}, state), {}, {\n            isDrawerIdle: false,\n            drawerMovementDirection: action.willShow ? 'opening' : 'closing'\n          });\n        }\n\n        if (action.type === DrawerActions.MARK_DRAWER_ACTIVE) {\n          return _objectSpread(_objectSpread({}, state), {}, {\n            isDrawerIdle: false,\n            drawerMovementDirection: null\n          });\n        }\n\n        if (action.type === DrawerActions.MARK_DRAWER_IDLE) {\n          return _objectSpread(_objectSpread({}, state), {}, {\n            isDrawerIdle: true,\n            drawerMovementDirection: null\n          });\n        }\n\n        if (action.type === NavigationActions.BACK && (state.isDrawerOpen || !state.isDrawerIdle) && state.drawerMovementDirection !== 'closing') {\n          return _objectSpread(_objectSpread({}, state), {}, {\n            closeId: genId()\n          });\n        }\n\n        if (action.type === DrawerActions.OPEN_DRAWER) {\n          return _objectSpread(_objectSpread({}, state), {}, {\n            openId: genId()\n          });\n        }\n\n        if (action.type === DrawerActions.TOGGLE_DRAWER) {\n          return _objectSpread(_objectSpread({}, state), {}, {\n            toggleId: genId()\n          });\n        }\n      }\n\n      var switchedState = switchRouter.getStateForAction(action, state);\n\n      if (switchedState === null) {\n        return null;\n      }\n\n      if (switchedState !== state) {\n        if (getActiveRouteKey(switchedState) !== getActiveRouteKey(state) && (state.isDrawerOpen || state.drawerMovementDirection !== 'closing')) {\n          return _objectSpread(_objectSpread({}, switchedState), {}, {\n            closeId: genId()\n          });\n        }\n\n        return switchedState;\n      }\n\n      return state;\n    }\n  });\n});","map":{"version":3,"names":["SwitchRouter","NavigationActions","DrawerActions","withDefaultValue","obj","key","defaultValue","hasOwnProperty","getActiveRouteKey","route","routes","index","routeConfigs","config","unmountInactiveRoutes","resetOnBlur","switchRouter","__id","genId","getActionCreators","navStateKey","openDrawer","closeDrawer","toggleDrawer","getStateForAction","action","state","undefined","isDrawerOpen","isDrawerIdle","drawerMovementDirection","openId","closeId","toggleId","isRouterTargeted","type","DRAWER_CLOSED","DRAWER_OPENED","CLOSE_DRAWER","MARK_DRAWER_SETTLING","willShow","MARK_DRAWER_ACTIVE","MARK_DRAWER_IDLE","BACK","OPEN_DRAWER","TOGGLE_DRAWER","switchedState"],"sources":["C:/Users/mike/Desktop/ha/DrawingKid_Expo_20210705/node_modules/react-navigation-drawer/dist/routers/DrawerRouter.js"],"sourcesContent":["import { SwitchRouter, NavigationActions } from '@react-navigation/core';\nimport DrawerActions from './DrawerActions';\n\nfunction withDefaultValue(obj, key, defaultValue) {\n  if (obj.hasOwnProperty(key) && typeof obj[key] !== 'undefined') {\n    return obj;\n  }\n\n  obj[key] = defaultValue;\n  return obj;\n}\n\nconst getActiveRouteKey = route => {\n  if (route.routes && route.routes[route.index]) {\n    return getActiveRouteKey(route.routes[route.index]);\n  }\n  return route.key;\n};\n\nexport default ((routeConfigs, config = {}) => {\n  config = { ...config };\n  config = withDefaultValue(config, 'resetOnBlur', config.unmountInactiveRoutes ? true : !!config.resetOnBlur);\n  config = withDefaultValue(config, 'backBehavior', 'initialRoute');\n\n  const switchRouter = SwitchRouter(routeConfigs, config);\n\n  let __id = -1;\n  const genId = () => {\n    __id++;\n    return __id;\n  };\n\n  return {\n    ...switchRouter,\n\n    getActionCreators(route, navStateKey) {\n      return {\n        openDrawer: () => DrawerActions.openDrawer({ key: navStateKey }),\n        closeDrawer: () => DrawerActions.closeDrawer({ key: navStateKey }),\n        toggleDrawer: () => DrawerActions.toggleDrawer({ key: navStateKey }),\n        ...switchRouter.getActionCreators(route, navStateKey)\n      };\n    },\n\n    getStateForAction(action, state) {\n      // Set up the initial state if needed\n      if (!state) {\n        return {\n          ...switchRouter.getStateForAction(action, undefined),\n          isDrawerOpen: false,\n          isDrawerIdle: true,\n          drawerMovementDirection: null,\n          openId: genId(),\n          closeId: genId(),\n          toggleId: genId()\n        };\n      }\n\n      const isRouterTargeted = action.key == null || action.key === state.key;\n\n      if (isRouterTargeted) {\n        // Only handle actions that are meant for this drawer, as specified by action.key.\n\n        if (action.type === DrawerActions.DRAWER_CLOSED) {\n          return {\n            ...state,\n            isDrawerOpen: false,\n            isDrawerIdle: true,\n            drawerMovementDirection: null\n          };\n        }\n\n        if (action.type === DrawerActions.DRAWER_OPENED) {\n          return {\n            ...state,\n            isDrawerOpen: true,\n            isDrawerIdle: true,\n            drawerMovementDirection: null\n          };\n        }\n\n        if (action.type === DrawerActions.CLOSE_DRAWER) {\n          return {\n            ...state,\n            closeId: genId()\n          };\n        }\n\n        if (action.type === DrawerActions.MARK_DRAWER_SETTLING) {\n          return {\n            ...state,\n            isDrawerIdle: false,\n            drawerMovementDirection: action.willShow ? 'opening' : 'closing'\n          };\n        }\n\n        if (action.type === DrawerActions.MARK_DRAWER_ACTIVE) {\n          return {\n            ...state,\n            isDrawerIdle: false,\n            drawerMovementDirection: null\n          };\n        }\n\n        if (action.type === DrawerActions.MARK_DRAWER_IDLE) {\n          return {\n            ...state,\n            isDrawerIdle: true,\n            drawerMovementDirection: null\n          };\n        }\n\n        if (action.type === NavigationActions.BACK && (state.isDrawerOpen || !state.isDrawerIdle) && state.drawerMovementDirection !== 'closing') {\n          return {\n            ...state,\n            closeId: genId()\n          };\n        }\n\n        if (action.type === DrawerActions.OPEN_DRAWER) {\n          return {\n            ...state,\n            openId: genId()\n          };\n        }\n\n        if (action.type === DrawerActions.TOGGLE_DRAWER) {\n          return {\n            ...state,\n            toggleId: genId()\n          };\n        }\n      }\n\n      // Fall back on switch router for screen switching logic, and handling of child routers\n      const switchedState = switchRouter.getStateForAction(action, state);\n\n      if (switchedState === null) {\n        // The switch router or a child router is attempting to swallow this action. We return null to allow this.\n        return null;\n      }\n\n      // Has the switch router changed the state?\n      if (switchedState !== state) {\n        // If any navigation has happened, and the drawer is maybe open, make sure to close it\n        if (getActiveRouteKey(switchedState) !== getActiveRouteKey(state) && (state.isDrawerOpen || state.drawerMovementDirection !== 'closing')) {\n          return {\n            ...switchedState,\n            closeId: genId()\n          };\n        }\n\n        // At this point, return the state as defined by the switch router.\n        // The active route key hasn't changed, so this most likely means that a child router has returned\n        // a new state like a param change, but the same key is still active and the drawer will remain open\n        return switchedState;\n      }\n\n      return state;\n    }\n  };\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}