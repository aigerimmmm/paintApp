{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nvar _dec, _class;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport { sizeFont, sizeWidth, sizeHeight } from \"../util/Size\";\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { inject, observer } from \"mobx-react\";\nvar ColorPen = (_dec = inject('paintStore'), _dec(_class = observer(_class = function (_Component) {\n  _inherits(ColorPen, _Component);\n\n  var _super = _createSuper(ColorPen);\n\n  function ColorPen() {\n    _classCallCheck(this, ColorPen);\n\n    return _super.call(this);\n  }\n\n  _createClass(ColorPen, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          source = _this$props.source,\n          isPen = _this$props.isPen,\n          id = _this$props.id,\n          onPress = _this$props.onPress,\n          styleTouch = _this$props.styleTouch,\n          styleImg = _this$props.styleImg;\n      var isShow = this.props.paintStore.getSelectPen(id).isSelect;\n      return React.createElement(TouchableOpacity, {\n        activeOpacity: 1,\n        onPress: onPress,\n        style: [{\n          flex: 1,\n          alignItems: \"center\",\n          justifyContent: \"center\"\n        }, isShow ? styles.containerShowPen : styles.containerHidePen, styleTouch]\n      }, React.createElement(Image, {\n        source: source,\n        style: styleImg\n      }));\n    }\n  }]);\n\n  return ColorPen;\n}(Component)) || _class) || _class);\nexport { ColorPen as default };\nvar styles = StyleSheet.create({\n  containerHidePen: {\n    borderRadius: sizeWidth(20),\n    paddingHorizontal: sizeWidth(2)\n  },\n  containerShowPen: {\n    borderRadius: sizeWidth(20),\n    backgroundColor: \"white\",\n    paddingHorizontal: sizeWidth(2)\n  }\n});","map":{"version":3,"names":["React","Component","sizeFont","sizeWidth","sizeHeight","TouchableOpacity","inject","observer","ColorPen","props","source","isPen","id","onPress","styleTouch","styleImg","isShow","paintStore","getSelectPen","isSelect","flex","alignItems","justifyContent","styles","containerShowPen","containerHidePen","StyleSheet","create","borderRadius","paddingHorizontal","backgroundColor"],"sources":["C:/Users/mike/Desktop/ha/DrawingKid_Expo_20210705/app/src/component/Pen.js"],"sourcesContent":["import React, {\n  Component\n} from 'react';\n\nimport { StyleSheet, View, Image, TouchableHighlight} from \"react-native\";\nimport { sizeFont, sizeWidth, sizeHeight } from \"../util/Size\";\nimport { TouchableOpacity } from 'react-native-gesture-handler';\n\n\nimport {inject, observer} from \"mobx-react\";\n@inject('paintStore')\n@observer\n\nexport default class ColorPen extends Component{\nconstructor () {\n  super();\n}\n\n\nrender(){\n  const {source, isPen, id, onPress, styleTouch, styleImg} = this.props;\n  let isShow = this.props.paintStore.getSelectPen(id).isSelect;\n  \n  return <TouchableOpacity activeOpacity={1}   onPress={onPress} \n          style={[{flex: 1, alignItems: \"center\", justifyContent: \"center\"}, isShow ? styles.containerShowPen : styles.containerHidePen , styleTouch]}>\n            <Image source={source} style={styleImg}/>\n          </TouchableOpacity >\n  \n}\n}\n\nconst styles = StyleSheet.create({\n  containerHidePen: {\n    borderRadius: sizeWidth(20),\n    paddingHorizontal: sizeWidth(2),\n    \n  },\n  containerShowPen: {\n    borderRadius: sizeWidth(20),\n    backgroundColor: \"white\",\n    paddingHorizontal: sizeWidth(2),\n\n  }\n});\n"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IACEC,SADF,QAEO,OAFP;;;;;AAKA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,UAA9B;AACA,SAASC,gBAAT,QAAiC,8BAAjC;AAGA,SAAQC,MAAR,EAAgBC,QAAhB,QAA+B,YAA/B;IAIqBC,Q,WAHpBF,MAAM,CAAC,YAAD,C,gBACNC,Q;;;;;EAGD,oBAAe;IAAA;;IAAA;EAEd;;;;6BAGO;MAAA,kBACqD,KAAKE,KAD1D;MAAA,IACCC,MADD,eACCA,MADD;MAAA,IACSC,KADT,eACSA,KADT;MAAA,IACgBC,EADhB,eACgBA,EADhB;MAAA,IACoBC,OADpB,eACoBA,OADpB;MAAA,IAC6BC,UAD7B,eAC6BA,UAD7B;MAAA,IACyCC,QADzC,eACyCA,QADzC;MAEN,IAAIC,MAAM,GAAG,KAAKP,KAAL,CAAWQ,UAAX,CAAsBC,YAAtB,CAAmCN,EAAnC,EAAuCO,QAApD;MAEA,OAAO,oBAAC,gBAAD;QAAkB,aAAa,EAAE,CAAjC;QAAsC,OAAO,EAAEN,OAA/C;QACC,KAAK,EAAE,CAAC;UAACO,IAAI,EAAE,CAAP;UAAUC,UAAU,EAAE,QAAtB;UAAgCC,cAAc,EAAE;QAAhD,CAAD,EAA4DN,MAAM,GAAGO,MAAM,CAACC,gBAAV,GAA6BD,MAAM,CAACE,gBAAtG,EAAyHX,UAAzH;MADR,GAEG,oBAAC,KAAD;QAAO,MAAM,EAAEJ,MAAf;QAAuB,KAAK,EAAEK;MAA9B,EAFH,CAAP;IAKD;;;;EAfqCd,S;SAAjBO,Q;AAkBrB,IAAMe,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;EAC/BF,gBAAgB,EAAE;IAChBG,YAAY,EAAEzB,SAAS,CAAC,EAAD,CADP;IAEhB0B,iBAAiB,EAAE1B,SAAS,CAAC,CAAD;EAFZ,CADa;EAM/BqB,gBAAgB,EAAE;IAChBI,YAAY,EAAEzB,SAAS,CAAC,EAAD,CADP;IAEhB2B,eAAe,EAAE,OAFD;IAGhBD,iBAAiB,EAAE1B,SAAS,CAAC,CAAD;EAHZ;AANa,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}