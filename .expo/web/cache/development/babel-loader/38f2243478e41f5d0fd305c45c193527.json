{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from 'react';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { createNavigator } from '@react-navigation/core';\nimport { SafeAreaView } from '@react-navigation/native';\nimport DrawerRouter from \"../routers/DrawerRouter\";\nimport DrawerView from \"../views/DrawerView\";\nimport DrawerItems from \"../views/DrawerNavigatorItems\";\n\nvar defaultContentComponent = function defaultContentComponent(props) {\n  return React.createElement(ScrollView, {\n    alwaysBounceVertical: false\n  }, React.createElement(SafeAreaView, {\n    forceInset: {\n      top: 'always',\n      horizontal: 'never'\n    }\n  }, React.createElement(DrawerItems, props)));\n};\n\nvar DefaultDrawerConfig = {\n  drawerWidth: function drawerWidth() {\n    var _Dimensions$get = Dimensions.get('window'),\n        height = _Dimensions$get.height,\n        width = _Dimensions$get.width;\n\n    var smallerAxisSize = Math.min(height, width);\n    var isLandscape = width > height;\n    var isTablet = smallerAxisSize >= 600;\n    var appBarHeight = Platform.OS === 'ios' ? isLandscape ? 32 : 44 : 56;\n    var maxWidth = isTablet ? 320 : 280;\n    return Math.min(smallerAxisSize - appBarHeight, maxWidth);\n  },\n  contentComponent: defaultContentComponent,\n  drawerPosition: 'left',\n  keyboardDismissMode: 'on-drag',\n  drawerBackgroundColor: 'white',\n  useNativeAnimations: true,\n  drawerType: 'front',\n  hideStatusBar: false,\n  statusBarAnimation: 'slide',\n  overlayColor: 'black'\n};\n\nvar DrawerNavigator = function DrawerNavigator(routeConfigs) {\n  var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var mergedConfig = _objectSpread(_objectSpread({}, DefaultDrawerConfig), config);\n\n  var drawerRouter = DrawerRouter(routeConfigs, mergedConfig);\n  var navigator = createNavigator(DrawerView, drawerRouter, mergedConfig);\n  return navigator;\n};\n\nexport default DrawerNavigator;","map":{"version":3,"names":["React","createNavigator","SafeAreaView","DrawerRouter","DrawerView","DrawerItems","defaultContentComponent","props","top","horizontal","DefaultDrawerConfig","drawerWidth","Dimensions","get","height","width","smallerAxisSize","Math","min","isLandscape","isTablet","appBarHeight","Platform","OS","maxWidth","contentComponent","drawerPosition","keyboardDismissMode","drawerBackgroundColor","useNativeAnimations","drawerType","hideStatusBar","statusBarAnimation","overlayColor","DrawerNavigator","routeConfigs","config","mergedConfig","drawerRouter","navigator"],"sources":["C:/Users/mike/Desktop/ha/DrawingKid_Expo_20210705/node_modules/react-navigation-drawer/dist/navigators/createDrawerNavigator.js"],"sourcesContent":["import React from 'react';\nimport { Dimensions, Platform, ScrollView } from 'react-native';\nimport { createNavigator } from '@react-navigation/core';\nimport { SafeAreaView } from '@react-navigation/native';\nimport DrawerRouter from '../routers/DrawerRouter';\nimport DrawerView from '../views/DrawerView';\nimport DrawerItems from '../views/DrawerNavigatorItems';\n\n// A stack navigators props are the intersection between\n// the base navigator props (navgiation, screenProps, etc)\n// and the view's props\n\nconst defaultContentComponent = props => <ScrollView alwaysBounceVertical={false}>\n    <SafeAreaView forceInset={{ top: 'always', horizontal: 'never' }}>\n      <DrawerItems {...props} />\n    </SafeAreaView>\n  </ScrollView>;\n\nconst DefaultDrawerConfig = {\n  drawerWidth: () => {\n    /*\n     * Default drawer width is screen width - header height\n     * with a max width of 280 on mobile and 320 on tablet\n     * https://material.io/guidelines/patterns/navigation-drawer.html\n     */\n    const { height, width } = Dimensions.get('window');\n    const smallerAxisSize = Math.min(height, width);\n    const isLandscape = width > height;\n    const isTablet = smallerAxisSize >= 600;\n    const appBarHeight = Platform.OS === 'ios' ? isLandscape ? 32 : 44 : 56;\n    const maxWidth = isTablet ? 320 : 280;\n\n    return Math.min(smallerAxisSize - appBarHeight, maxWidth);\n  },\n  contentComponent: defaultContentComponent,\n  drawerPosition: 'left',\n  keyboardDismissMode: 'on-drag',\n  drawerBackgroundColor: 'white',\n  useNativeAnimations: true,\n  drawerType: 'front',\n  hideStatusBar: false,\n  statusBarAnimation: 'slide',\n  overlayColor: 'black'\n};\n\nconst DrawerNavigator = (routeConfigs, config = {}) => {\n  const mergedConfig = { ...DefaultDrawerConfig, ...config };\n  const drawerRouter = DrawerRouter(routeConfigs, mergedConfig);\n  const navigator = createNavigator(DrawerView, drawerRouter, mergedConfig);\n  return navigator;\n};\n\nexport default DrawerNavigator;"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,SAASC,eAAT,QAAgC,wBAAhC;AACA,SAASC,YAAT,QAA6B,0BAA7B;AACA,OAAOC,YAAP;AACA,OAAOC,UAAP;AACA,OAAOC,WAAP;;AAMA,IAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B,CAAAC,KAAK;EAAA,OAAI,oBAAC,UAAD;IAAY,oBAAoB,EAAE;EAAlC,GACrC,oBAAC,YAAD;IAAc,UAAU,EAAE;MAAEC,GAAG,EAAE,QAAP;MAAiBC,UAAU,EAAE;IAA7B;EAA1B,GACE,oBAAC,WAAD,EAAiBF,KAAjB,CADF,CADqC,CAAJ;AAAA,CAArC;;AAMA,IAAMG,mBAAmB,GAAG;EAC1BC,WAAW,EAAE,uBAAM;IAAA,sBAMSC,UAAU,CAACC,GAAX,CAAe,QAAf,CANT;IAAA,IAMTC,MANS,mBAMTA,MANS;IAAA,IAMDC,KANC,mBAMDA,KANC;;IAOjB,IAAMC,eAAe,GAAGC,IAAI,CAACC,GAAL,CAASJ,MAAT,EAAiBC,KAAjB,CAAxB;IACA,IAAMI,WAAW,GAAGJ,KAAK,GAAGD,MAA5B;IACA,IAAMM,QAAQ,GAAGJ,eAAe,IAAI,GAApC;IACA,IAAMK,YAAY,GAAGC,QAAQ,CAACC,EAAT,KAAgB,KAAhB,GAAwBJ,WAAW,GAAG,EAAH,GAAQ,EAA3C,GAAgD,EAArE;IACA,IAAMK,QAAQ,GAAGJ,QAAQ,GAAG,GAAH,GAAS,GAAlC;IAEA,OAAOH,IAAI,CAACC,GAAL,CAASF,eAAe,GAAGK,YAA3B,EAAyCG,QAAzC,CAAP;EACD,CAfyB;EAgB1BC,gBAAgB,EAAEnB,uBAhBQ;EAiB1BoB,cAAc,EAAE,MAjBU;EAkB1BC,mBAAmB,EAAE,SAlBK;EAmB1BC,qBAAqB,EAAE,OAnBG;EAoB1BC,mBAAmB,EAAE,IApBK;EAqB1BC,UAAU,EAAE,OArBc;EAsB1BC,aAAa,EAAE,KAtBW;EAuB1BC,kBAAkB,EAAE,OAvBM;EAwB1BC,YAAY,EAAE;AAxBY,CAA5B;;AA2BA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,YAAD,EAA+B;EAAA,IAAhBC,MAAgB,uEAAP,EAAO;;EACrD,IAAMC,YAAY,mCAAQ3B,mBAAR,GAAgC0B,MAAhC,CAAlB;;EACA,IAAME,YAAY,GAAGnC,YAAY,CAACgC,YAAD,EAAeE,YAAf,CAAjC;EACA,IAAME,SAAS,GAAGtC,eAAe,CAACG,UAAD,EAAakC,YAAb,EAA2BD,YAA3B,CAAjC;EACA,OAAOE,SAAP;AACD,CALD;;AAOA,eAAeL,eAAf"},"metadata":{},"sourceType":"module"}