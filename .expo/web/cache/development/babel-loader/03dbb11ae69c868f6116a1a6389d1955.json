{"ast":null,"code":"import React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nvar screen = Dimensions.get(\"window\");\nvar styles = StyleSheet.create({\n  container: {\n    position: \"relative\",\n    top: -450,\n    left: 0,\n    right: 0,\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  circle: {\n    backgroundColor: \"#ff4136\",\n    width: screen.width / 2,\n    height: screen.width / 2,\n    borderRadius: screen.width / 2,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  circleCorrect: {\n    backgroundColor: 'transparent'\n  },\n  icon: {\n    width: screen.width\n  }\n});\nexport var Alert = function Alert(_ref) {\n  var correct = _ref.correct,\n      visible = _ref.visible;\n  if (!visible) return null;\n  var a = [require(\"../../../assets/question.gif\")];\n  var unshuffled = ['hello', 'a', 't', 'q', 1, 2, 3];\n  var shuffled = a.map(function (value) {\n    return {\n      value: value,\n      sort: Math.random()\n    };\n  }).sort(function (a, b) {\n    return a.sort - b.sort;\n  }).map(function (_ref2) {\n    var value = _ref2.value;\n    return value;\n  });\n  console.log(shuffled[0]);\n  var icon;\n\n  if (correct) {\n    icon = require(\"../../../assets/rsz_great.png\");\n  } else {\n    icon = require(\"../../../assets/close.png\");\n  }\n\n  var circleStyles = [styles.circle];\n\n  if (correct) {\n    circleStyles.push(styles.circleCorrect);\n  }\n\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(View, {\n    style: circleStyles\n  }, React.createElement(Image, {\n    source: icon,\n    style: styles.icon,\n    resizeMode: \"contain\"\n  })));\n};","map":{"version":3,"names":["React","screen","Dimensions","get","styles","StyleSheet","create","container","position","top","left","right","flex","alignItems","justifyContent","circle","backgroundColor","width","height","borderRadius","circleCorrect","icon","Alert","correct","visible","a","require","unshuffled","shuffled","map","value","sort","Math","random","b","console","log","circleStyles","push"],"sources":["C:/Users/mike/Desktop/ha/DrawingKid_Expo_20210705/app/src/components/Alert.js"],"sourcesContent":["import React from \"react\";\r\nimport { View, StyleSheet, Dimensions, Image } from \"react-native\";\r\n\r\nconst screen = Dimensions.get(\"window\");\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    position: \"relative\",\r\n    top: -450,\r\n    //bottom: 90,\r\n    left: 0,\r\n    right: 0,\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\"\r\n  },\r\n  circle: {\r\n    backgroundColor: \"#ff4136\",\r\n    width: screen.width/2,\r\n    height: screen.width/2,\r\n    borderRadius: screen.width / 2,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\"\r\n  },\r\n  circleCorrect: {\r\n    backgroundColor: 'transparent'     \r\n  },\r\n  icon: {\r\n    width: screen.width\r\n  }\r\n});\r\n\r\nexport const Alert = ({ correct, visible }) => {\r\n  if (!visible) return null;\r\n  \r\n const a = [require(\"../../../assets/question.gif\")];\r\n  let unshuffled = ['hello', 'a', 't', 'q', 1, 2, 3]\r\n\r\nlet shuffled = a\r\n  .map((value) => ({ value, sort: Math.random() }))\r\n  .sort((a, b) => a.sort - b.sort)\r\n  .map(({ value }) => value)\r\n  console.log(shuffled[0])\r\n \r\n\r\n  //const icon = correct ? a[i++] : require(\"../assets/close.png\");\r\n\r\n  var icon;\r\n  if (correct) {\r\n    //icon = require(\"../../../assets/question2.gif\")\r\n    icon =  require(\"../../../assets/rsz_great.png\");\r\n    //console.log(icon)\r\n  } else {\r\n    icon =  require(\"../../../assets/close.png\");\r\n  }\r\n\r\n\r\n\r\n  const circleStyles = [styles.circle];\r\n\r\n  if (correct) {\r\n    circleStyles.push(styles.circleCorrect);\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={circleStyles}>\r\n        <Image source={icon} style={styles.icon} resizeMode=\"contain\" />\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAGA,IAAMC,MAAM,GAAGC,UAAU,CAACC,GAAX,CAAe,QAAf,CAAf;AAEA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;EAC/BC,SAAS,EAAE;IACTC,QAAQ,EAAE,UADD;IAETC,GAAG,EAAE,CAAC,GAFG;IAITC,IAAI,EAAE,CAJG;IAKTC,KAAK,EAAE,CALE;IAMTC,IAAI,EAAE,CANG;IAOTC,UAAU,EAAE,QAPH;IAQTC,cAAc,EAAE;EARP,CADoB;EAW/BC,MAAM,EAAE;IACNC,eAAe,EAAE,SADX;IAENC,KAAK,EAAEhB,MAAM,CAACgB,KAAP,GAAa,CAFd;IAGNC,MAAM,EAAEjB,MAAM,CAACgB,KAAP,GAAa,CAHf;IAINE,YAAY,EAAElB,MAAM,CAACgB,KAAP,GAAe,CAJvB;IAKNJ,UAAU,EAAE,QALN;IAMNC,cAAc,EAAE;EANV,CAXuB;EAmB/BM,aAAa,EAAE;IACbJ,eAAe,EAAE;EADJ,CAnBgB;EAsB/BK,IAAI,EAAE;IACJJ,KAAK,EAAEhB,MAAM,CAACgB;EADV;AAtByB,CAAlB,CAAf;AA2BA,OAAO,IAAMK,KAAK,GAAG,SAARA,KAAQ,OAA0B;EAAA,IAAvBC,OAAuB,QAAvBA,OAAuB;EAAA,IAAdC,OAAc,QAAdA,OAAc;EAC7C,IAAI,CAACA,OAAL,EAAc,OAAO,IAAP;EAEf,IAAMC,CAAC,GAAG,CAACC,OAAO,gCAAR,CAAV;EACC,IAAIC,UAAU,GAAG,CAAC,OAAD,EAAU,GAAV,EAAe,GAAf,EAAoB,GAApB,EAAyB,CAAzB,EAA4B,CAA5B,EAA+B,CAA/B,CAAjB;EAEF,IAAIC,QAAQ,GAAGH,CAAC,CACbI,GADY,CACR,UAACC,KAAD;IAAA,OAAY;MAAEA,KAAK,EAALA,KAAF;MAASC,IAAI,EAAEC,IAAI,CAACC,MAAL;IAAf,CAAZ;EAAA,CADQ,EAEZF,IAFY,CAEP,UAACN,CAAD,EAAIS,CAAJ;IAAA,OAAUT,CAAC,CAACM,IAAF,GAASG,CAAC,CAACH,IAArB;EAAA,CAFO,EAGZF,GAHY,CAGR;IAAA,IAAGC,KAAH,SAAGA,KAAH;IAAA,OAAeA,KAAf;EAAA,CAHQ,CAAf;EAIEK,OAAO,CAACC,GAAR,CAAYR,QAAQ,CAAC,CAAD,CAApB;EAKA,IAAIP,IAAJ;;EACA,IAAIE,OAAJ,EAAa;IAEXF,IAAI,GAAIK,OAAO,iCAAf;EAED,CAJD,MAIO;IACLL,IAAI,GAAIK,OAAO,6BAAf;EACD;;EAID,IAAMW,YAAY,GAAG,CAACjC,MAAM,CAACW,MAAR,CAArB;;EAEA,IAAIQ,OAAJ,EAAa;IACXc,YAAY,CAACC,IAAb,CAAkBlC,MAAM,CAACgB,aAAzB;EACD;;EAED,OACE,oBAAC,IAAD;IAAM,KAAK,EAAEhB,MAAM,CAACG;EAApB,GACE,oBAAC,IAAD;IAAM,KAAK,EAAE8B;EAAb,GACE,oBAAC,KAAD;IAAO,MAAM,EAAEhB,IAAf;IAAqB,KAAK,EAAEjB,MAAM,CAACiB,IAAnC;IAAyC,UAAU,EAAC;EAApD,EADF,CADF,CADF;AAOD,CAvCM"},"metadata":{},"sourceType":"module"}