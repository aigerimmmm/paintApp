{"ast":null,"code":"function _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport getNavigationActionCreators from \"./routers/getNavigationActionCreators\";\nimport _getChildNavigation from \"./getChildNavigation\";\nimport getChildrenNavigationCache from \"./getChildrenNavigationCache\";\nexport default function getNavigation(router, state, dispatch, actionSubscribers, getScreenProps, getCurrentNavigation) {\n  var actions = router.getActionCreators(state, null);\n  var navigation = {\n    actions: actions,\n    router: router,\n    state: state,\n    dispatch: dispatch,\n    getScreenProps: getScreenProps,\n    getChildNavigation: function getChildNavigation(childKey) {\n      return _getChildNavigation(navigation, childKey, getCurrentNavigation);\n    },\n    isFocused: function isFocused(childKey) {\n      var _getCurrentNavigation = getCurrentNavigation().state,\n          routes = _getCurrentNavigation.routes,\n          index = _getCurrentNavigation.index;\n\n      if (childKey == null || routes[index].key === childKey) {\n        return true;\n      }\n\n      return false;\n    },\n    addListener: function addListener(eventName, handler) {\n      if (eventName !== 'action') {\n        return {\n          remove: function remove() {}\n        };\n      }\n\n      actionSubscribers.add(handler);\n      return {\n        remove: function remove() {\n          actionSubscribers.delete(handler);\n        }\n      };\n    },\n    dangerouslyGetParent: function dangerouslyGetParent() {\n      return null;\n    },\n    isFirstRouteInParent: function isFirstRouteInParent() {\n      return true;\n    },\n    _childrenNavigation: getChildrenNavigationCache(getCurrentNavigation())\n  };\n\n  var actionCreators = _objectSpread({}, getNavigationActionCreators(navigation.state), actions);\n\n  Object.keys(actionCreators).forEach(function (actionName) {\n    navigation[actionName] = function () {\n      return navigation.dispatch(actionCreators[actionName].apply(actionCreators, arguments));\n    };\n  });\n  return navigation;\n}","map":{"version":3,"sources":["../src/getNavigation.js"],"names":["actions","router","navigation","state","dispatch","getScreenProps","getChildNavigation","childKey","isFocused","index","getCurrentNavigation","routes","addListener","eventName","remove","actionSubscribers","dangerouslyGetParent","isFirstRouteInParent","_childrenNavigation","getChildrenNavigationCache","actionCreators","getNavigationActionCreators","Object","actionName"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,2BAAA;AACA,OAAA,mBAAA;AACA,OAAA,0BAAA;AAEA,eAAe,SAAA,aAAA,CAAA,MAAA,EAAA,KAAA,EAAA,QAAA,EAAA,iBAAA,EAAA,cAAA,EAAA,oBAAA,EAOb;EACA,IAAMA,OAAO,GAAGC,MAAM,CAANA,iBAAAA,CAAAA,KAAAA,EAAhB,IAAgBA,CAAhB;EAEA,IAAMC,UAAU,GAAG;IACjBF,OADiB,EACjBA,OADiB;IAEjBC,MAFiB,EAEjBA,MAFiB;IAGjBE,KAHiB,EAGjBA,KAHiB;IAIjBC,QAJiB,EAIjBA,QAJiB;IAKjBC,cALiB,EAKjBA,cALiB;IAMjBC,kBAAkB,EAAEC,4BAAAA,QAAQ;MAAA,OAC1BD,mBAAkB,CAAA,UAAA,EAAA,QAAA,EAPH,oBAOG,CADQ;IAAA,CANX;IAQjBE,SAAS,EAAED,mBAAAA,QAAQ,EAAI;MAAA,4BACKG,oBAAoB,GAA9C,KADqB;MAAA,IACf,MADe,yBACf,MADe;MAAA,IACLD,KADK,yBACLA,KADK;;MAErB,IAAIF,QAAQ,IAARA,IAAAA,IAAoBI,MAAM,CAANA,KAAM,CAANA,CAAAA,GAAAA,KAAxB,QAAA,EAAwD;QACtD,OAAA,IAAA;MACD;;MACD,OAAA,KAAA;IAbe,CAAA;IAejBC,WAAW,EAAE,qBAAA,SAAA,EAAA,OAAA,EAAwB;MACnC,IAAIC,SAAS,KAAb,QAAA,EAA4B;QAC1B,OAAO;UAAEC,MAAM,EAAE,kBAAM,CAAE;QAAlB,CAAP;MACD;;MACDC,iBAAiB,CAAjBA,GAAAA,CAAAA,OAAAA;MACA,OAAO;QACLD,MAAM,EAAE,kBAAM;UACZC,iBAAiB,CAAjBA,MAAAA,CAAAA,OAAAA;QACD;MAHI,CAAP;IApBe,CAAA;IA0BjBC,oBAAoB,EAAE;MAAA,OA1BL,IA0BK;IAAA,CA1BL;IA2BjBC,oBAAoB,EAAE;MAAA,OA3BL,IA2BK;IAAA,CA3BL;IA4BjBC,mBAAmB,EAAEC,0BAA0B,CAACT,oBAAD,EAAA;EA5B9B,CAAnB;;EA+BA,IAAMU,cAAc,GAAA,aAAA,CAAA,EAAA,EACfC,2BAA2B,CAACnB,UAAU,CADvB,KACY,CADZ,EAApB,OAAoB,CAApB;;EAKAoB,MAAM,CAANA,IAAAA,CAAAA,cAAAA,EAAAA,OAAAA,CAAoCC,UAAAA,UAAU,EAAI;IAChDrB,UAAU,CAAVA,UAAU,CAAVA,GAAyB;MAAA,OACvBA,UAAU,CAAVA,QAAAA,CAAoBkB,cAAc,CADpClB,UACoC,CAAdkB,OAAAA,cAAc,YAAlClB,CADuB;IAAA,CAAzBA;EADFoB,CAAAA;EAKA,OAAA,UAAA;AACD","sourcesContent":["import getNavigationActionCreators from './routers/getNavigationActionCreators';\nimport getChildNavigation from './getChildNavigation';\nimport getChildrenNavigationCache from './getChildrenNavigationCache';\n\nexport default function getNavigation(\n  router,\n  state,\n  dispatch,\n  actionSubscribers,\n  getScreenProps,\n  getCurrentNavigation\n) {\n  const actions = router.getActionCreators(state, null);\n\n  const navigation = {\n    actions,\n    router,\n    state,\n    dispatch,\n    getScreenProps,\n    getChildNavigation: childKey =>\n      getChildNavigation(navigation, childKey, getCurrentNavigation),\n    isFocused: childKey => {\n      const { routes, index } = getCurrentNavigation().state;\n      if (childKey == null || routes[index].key === childKey) {\n        return true;\n      }\n      return false;\n    },\n    addListener: (eventName, handler) => {\n      if (eventName !== 'action') {\n        return { remove: () => {} };\n      }\n      actionSubscribers.add(handler);\n      return {\n        remove: () => {\n          actionSubscribers.delete(handler);\n        },\n      };\n    },\n    dangerouslyGetParent: () => null,\n    isFirstRouteInParent: () => true,\n    _childrenNavigation: getChildrenNavigationCache(getCurrentNavigation()),\n  };\n\n  const actionCreators = {\n    ...getNavigationActionCreators(navigation.state),\n    ...actions,\n  };\n\n  Object.keys(actionCreators).forEach(actionName => {\n    navigation[actionName] = (...args) =>\n      navigation.dispatch(actionCreators[actionName](...args));\n  });\n\n  return navigation;\n}\n"]},"metadata":{},"sourceType":"module"}