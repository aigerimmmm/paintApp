{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { sizeWidth } from \"../util/Size\";\nimport PropTypes from 'prop-types';\nimport Icons from \"./Icon\";\nimport { COLOR_APP_BLUE } from \"../../res/style/AppStyle\";\n\nvar IconCircleButton = function (_React$PureComponent) {\n  _inherits(IconCircleButton, _React$PureComponent);\n\n  var _super = _createSuper(IconCircleButton);\n\n  function IconCircleButton() {\n    _classCallCheck(this, IconCircleButton);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(IconCircleButton, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          style = _this$props.style,\n          styleButton = _this$props.styleButton,\n          source = _this$props.source,\n          onPress = _this$props.onPress,\n          resizeMode = _this$props.resizeMode,\n          backgroundColor = _this$props.backgroundColor;\n      return React.createElement(TouchableOpacity, {\n        style: [styles.container, {\n          backgroundColor: backgroundColor\n        }, styleButton],\n        onPress: onPress,\n        disabled: !onPress\n      }, React.createElement(Icons, {\n        style: styles.icon,\n        source: require(\"../../res/images/ic_ellipse.png\")\n      }), React.createElement(View, {\n        style: {\n          justifyContent: 'center',\n          alignItems: 'center',\n          height: sizeWidth(8.5),\n          width: sizeWidth(8.5)\n        }\n      }, React.createElement(Image, {\n        source: source,\n        resizeMode: resizeMode || 'contain',\n        style: [styles.image, style]\n      })));\n    }\n  }]);\n\n  return IconCircleButton;\n}(React.PureComponent);\n\nIconCircleButton.propTypes = {\n  source: PropTypes.any.isRequired,\n  style: PropTypes.any,\n  resizeMode: PropTypes.any,\n  backgroundColor: PropTypes.any,\n  styleButton: PropTypes.any,\n  onPress: PropTypes.func\n};\nexport { IconCircleButton as default };\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: COLOR_APP_BLUE,\n    borderRadius: sizeWidth(10),\n    height: sizeWidth(8.5),\n    width: sizeWidth(8.5)\n  },\n  image: {\n    height: sizeWidth(5),\n    width: sizeWidth(5)\n  },\n  icon: {\n    position: 'absolute',\n    top: sizeWidth(2.5),\n    left: sizeWidth(1),\n    height: sizeWidth(3),\n    width: sizeWidth(3)\n  }\n});","map":{"version":3,"names":["React","sizeWidth","PropTypes","Icons","COLOR_APP_BLUE","IconCircleButton","props","style","styleButton","source","onPress","resizeMode","backgroundColor","styles","container","icon","require","justifyContent","alignItems","height","width","image","PureComponent","propTypes","any","isRequired","func","StyleSheet","create","borderRadius","position","top","left"],"sources":["C:/Users/mike/Desktop/ha/DrawingKid_Expo_20210705/app/src/component/IconCircleButton.js"],"sourcesContent":["import React from 'react';\nimport {Image, StyleSheet, TouchableOpacity, View} from 'react-native';\nimport {sizeWidth} from \"../util/Size\";\nimport PropTypes from 'prop-types';\nimport Icons from \"./Icon\";\nimport {COLOR_APP_BLUE} from \"../../res/style/AppStyle\";\n\nexport default class IconCircleButton extends React.PureComponent {\n\n    static propTypes = {\n        source: PropTypes.any.isRequired,\n        style: PropTypes.any,\n        resizeMode: PropTypes.any,\n        backgroundColor: PropTypes.any,\n        styleButton: PropTypes.any,\n        onPress: PropTypes.func,\n    };\n\n    render() {\n        const {style, styleButton, source, onPress, resizeMode, backgroundColor} = this.props;\n\n        return (\n            <TouchableOpacity\n                style={[styles.container, {backgroundColor}, styleButton]}\n                onPress={onPress}\n                disabled={!onPress}>\n                <Icons style={styles.icon}\n                       source={require('../../res/images/ic_ellipse.png')}/>\n                <View style={{\n                    justifyContent: 'center', alignItems: 'center', height: sizeWidth(8.5),\n                    width: sizeWidth(8.5)\n                }}>\n                    <Image\n                        source={source}\n                        resizeMode={resizeMode || 'contain'}\n                        style={[styles.image, style]}/>\n                </View>\n            </TouchableOpacity>\n        )\n    }\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        backgroundColor: COLOR_APP_BLUE,\n        borderRadius: sizeWidth(10),\n        height: sizeWidth(8.5),\n        width: sizeWidth(8.5),\n    },\n    image: {\n        height: sizeWidth(5),\n        width: sizeWidth(5),\n    },\n    icon: {\n        position: 'absolute',\n        top: sizeWidth(2.5),\n        left: sizeWidth(1),\n        height: sizeWidth(3),\n        width: sizeWidth(3),\n    },\n});\n"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAEA,SAAQC,SAAR;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP;AACA,SAAQC,cAAR;;IAEqBC,gB;;;;;;;;;;;;;6BAWR;MAAA,kBACsE,KAAKC,KAD3E;MAAA,IACEC,KADF,eACEA,KADF;MAAA,IACSC,WADT,eACSA,WADT;MAAA,IACsBC,MADtB,eACsBA,MADtB;MAAA,IAC8BC,OAD9B,eAC8BA,OAD9B;MAAA,IACuCC,UADvC,eACuCA,UADvC;MAAA,IACmDC,eADnD,eACmDA,eADnD;MAGL,OACI,oBAAC,gBAAD;QACI,KAAK,EAAE,CAACC,MAAM,CAACC,SAAR,EAAmB;UAACF,eAAe,EAAfA;QAAD,CAAnB,EAAsCJ,WAAtC,CADX;QAEI,OAAO,EAAEE,OAFb;QAGI,QAAQ,EAAE,CAACA;MAHf,GAII,oBAAC,KAAD;QAAO,KAAK,EAAEG,MAAM,CAACE,IAArB;QACO,MAAM,EAAEC,OAAO;MADtB,EAJJ,EAMI,oBAAC,IAAD;QAAM,KAAK,EAAE;UACTC,cAAc,EAAE,QADP;UACiBC,UAAU,EAAE,QAD7B;UACuCC,MAAM,EAAElB,SAAS,CAAC,GAAD,CADxD;UAETmB,KAAK,EAAEnB,SAAS,CAAC,GAAD;QAFP;MAAb,GAII,oBAAC,KAAD;QACI,MAAM,EAAEQ,MADZ;QAEI,UAAU,EAAEE,UAAU,IAAI,SAF9B;QAGI,KAAK,EAAE,CAACE,MAAM,CAACQ,KAAR,EAAed,KAAf;MAHX,EAJJ,CANJ,CADJ;IAkBH;;;;EAhCyCP,KAAK,CAACsB,a;;AAA/BjB,gB,CAEVkB,S,GAAY;EACfd,MAAM,EAAEP,SAAS,CAACsB,GAAV,CAAcC,UADP;EAEflB,KAAK,EAAEL,SAAS,CAACsB,GAFF;EAGfb,UAAU,EAAET,SAAS,CAACsB,GAHP;EAIfZ,eAAe,EAAEV,SAAS,CAACsB,GAJZ;EAKfhB,WAAW,EAAEN,SAAS,CAACsB,GALR;EAMfd,OAAO,EAAER,SAAS,CAACwB;AANJ,C;SAFFrB,gB;AAmCrB,IAAMQ,MAAM,GAAGc,UAAU,CAACC,MAAX,CAAkB;EAC7Bd,SAAS,EAAE;IACPF,eAAe,EAAER,cADV;IAEPyB,YAAY,EAAE5B,SAAS,CAAC,EAAD,CAFhB;IAGPkB,MAAM,EAAElB,SAAS,CAAC,GAAD,CAHV;IAIPmB,KAAK,EAAEnB,SAAS,CAAC,GAAD;EAJT,CADkB;EAO7BoB,KAAK,EAAE;IACHF,MAAM,EAAElB,SAAS,CAAC,CAAD,CADd;IAEHmB,KAAK,EAAEnB,SAAS,CAAC,CAAD;EAFb,CAPsB;EAW7Bc,IAAI,EAAE;IACFe,QAAQ,EAAE,UADR;IAEFC,GAAG,EAAE9B,SAAS,CAAC,GAAD,CAFZ;IAGF+B,IAAI,EAAE/B,SAAS,CAAC,CAAD,CAHb;IAIFkB,MAAM,EAAElB,SAAS,CAAC,CAAD,CAJf;IAKFmB,KAAK,EAAEnB,SAAS,CAAC,CAAD;EALd;AAXuB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}