{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { StackActions } from '@react-navigation/core';\nimport StackViewLayout from \"./StackViewLayout\";\nimport Transitioner from \"../Transitioner\";\nimport TransitionConfigs from \"./StackViewTransitionConfigs\";\nvar USE_NATIVE_DRIVER = true;\nvar DefaultNavigationConfig = {\n  mode: 'card',\n  cardShadowEnabled: true,\n  cardOverlayEnabled: false\n};\n\nvar StackView = function (_React$Component) {\n  _inherits(StackView, _React$Component);\n\n  var _super = _createSuper(StackView);\n\n  function StackView() {\n    var _this;\n\n    _classCallCheck(this, StackView);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this._configureTransition = function (transitionProps, prevTransitionProps) {\n      return _objectSpread(_objectSpread({}, TransitionConfigs.getTransitionConfig(_this.props.navigationConfig.transitionConfig, transitionProps, prevTransitionProps, _this.props.navigationConfig.mode === 'modal').transitionSpec), {}, {\n        useNativeDriver: USE_NATIVE_DRIVER\n      });\n    };\n\n    _this._getShadowEnabled = function () {\n      var navigationConfig = _this.props.navigationConfig;\n      return navigationConfig && navigationConfig.hasOwnProperty('cardShadowEnabled') ? navigationConfig.cardShadowEnabled : DefaultNavigationConfig.cardShadowEnabled;\n    };\n\n    _this._getCardOverlayEnabled = function () {\n      var navigationConfig = _this.props.navigationConfig;\n      return navigationConfig && navigationConfig.hasOwnProperty('cardOverlayEnabled') ? navigationConfig.cardOverlayEnabled : DefaultNavigationConfig.cardOverlayEnabled;\n    };\n\n    _this._render = function (transitionProps, lastTransitionProps) {\n      var _this$props = _this.props,\n          screenProps = _this$props.screenProps,\n          navigationConfig = _this$props.navigationConfig;\n      return React.createElement(StackViewLayout, _extends({}, navigationConfig, {\n        shadowEnabled: _this._getShadowEnabled(),\n        cardOverlayEnabled: _this._getCardOverlayEnabled(),\n        onGestureBegin: _this.props.onGestureBegin,\n        onGestureCanceled: _this.props.onGestureCanceled,\n        onGestureEnd: _this.props.onGestureEnd,\n        screenProps: screenProps,\n        descriptors: _this.props.descriptors,\n        transitionProps: transitionProps,\n        lastTransitionProps: lastTransitionProps\n      }));\n    };\n\n    _this._onTransitionEnd = function (transition, lastTransition) {\n      var _this$props2 = _this.props,\n          navigationConfig = _this$props2.navigationConfig,\n          navigation = _this$props2.navigation,\n          _this$props2$onTransi = _this$props2.onTransitionEnd,\n          onTransitionEnd = _this$props2$onTransi === void 0 ? navigationConfig.onTransitionEnd : _this$props2$onTransi;\n      var transitionDestKey = transition.scene.route.key;\n      var isCurrentKey = navigation.state.routes[navigation.state.index].key === transitionDestKey;\n\n      if (transition.navigation.state.isTransitioning && isCurrentKey) {\n        navigation.dispatch(StackActions.completeTransition({\n          key: navigation.state.key,\n          toChildKey: transitionDestKey\n        }));\n      }\n\n      onTransitionEnd && onTransitionEnd(transition, lastTransition);\n    };\n\n    return _this;\n  }\n\n  _createClass(StackView, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Transitioner, {\n        render: this._render,\n        configureTransition: this._configureTransition,\n        screenProps: this.props.screenProps,\n        navigation: this.props.navigation,\n        descriptors: this.props.descriptors,\n        onTransitionStart: this.props.onTransitionStart || this.props.navigationConfig.onTransitionStart,\n        onTransitionEnd: this._onTransitionEnd\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var navigation = this.props.navigation;\n\n      if (navigation.state.isTransitioning) {\n        navigation.dispatch(StackActions.completeTransition({\n          key: navigation.state.key\n        }));\n      }\n    }\n  }]);\n\n  return StackView;\n}(React.Component);\n\nexport default StackView;","map":{"version":3,"names":["React","StackActions","StackViewLayout","Transitioner","TransitionConfigs","USE_NATIVE_DRIVER","DefaultNavigationConfig","mode","cardShadowEnabled","cardOverlayEnabled","StackView","_configureTransition","transitionProps","prevTransitionProps","getTransitionConfig","props","navigationConfig","transitionConfig","transitionSpec","useNativeDriver","_getShadowEnabled","hasOwnProperty","_getCardOverlayEnabled","_render","lastTransitionProps","screenProps","onGestureBegin","onGestureCanceled","onGestureEnd","descriptors","_onTransitionEnd","transition","lastTransition","navigation","onTransitionEnd","transitionDestKey","scene","route","key","isCurrentKey","state","routes","index","isTransitioning","dispatch","completeTransition","toChildKey","onTransitionStart","Component"],"sources":["C:/Users/mike/Desktop/ha/DrawingKid_Expo_20210705/node_modules/react-navigation-stack/src/views/StackView/StackView.js"],"sourcesContent":["import React from 'react';\n\nimport { StackActions } from '@react-navigation/core';\nimport StackViewLayout from './StackViewLayout';\nimport Transitioner from '../Transitioner';\nimport TransitionConfigs from './StackViewTransitionConfigs';\n\nconst USE_NATIVE_DRIVER = true;\n\n// NOTE(brentvatne): this was previously in defaultProps, but that is deceiving\n// because the entire object will be clobbered by navigationConfig that is\n// passed in.\nconst DefaultNavigationConfig = {\n  mode: 'card',\n  cardShadowEnabled: true,\n  cardOverlayEnabled: false,\n};\n\nclass StackView extends React.Component {\n  render() {\n    return (\n      <Transitioner\n        render={this._render}\n        configureTransition={this._configureTransition}\n        screenProps={this.props.screenProps}\n        navigation={this.props.navigation}\n        descriptors={this.props.descriptors}\n        onTransitionStart={\n          this.props.onTransitionStart ||\n          this.props.navigationConfig.onTransitionStart\n        }\n        onTransitionEnd={this._onTransitionEnd}\n      />\n    );\n  }\n\n  componentDidMount() {\n    const { navigation } = this.props;\n    if (navigation.state.isTransitioning) {\n      navigation.dispatch(\n        StackActions.completeTransition({\n          key: navigation.state.key,\n        })\n      );\n    }\n  }\n\n  _configureTransition = (transitionProps, prevTransitionProps) => {\n    return {\n      ...TransitionConfigs.getTransitionConfig(\n        this.props.navigationConfig.transitionConfig,\n        transitionProps,\n        prevTransitionProps,\n        this.props.navigationConfig.mode === 'modal'\n      ).transitionSpec,\n      useNativeDriver: USE_NATIVE_DRIVER,\n    };\n  };\n\n  _getShadowEnabled = () => {\n    const { navigationConfig } = this.props;\n    return navigationConfig &&\n      navigationConfig.hasOwnProperty('cardShadowEnabled')\n      ? navigationConfig.cardShadowEnabled\n      : DefaultNavigationConfig.cardShadowEnabled;\n  };\n\n  _getCardOverlayEnabled = () => {\n    const { navigationConfig } = this.props;\n    return navigationConfig &&\n      navigationConfig.hasOwnProperty('cardOverlayEnabled')\n      ? navigationConfig.cardOverlayEnabled\n      : DefaultNavigationConfig.cardOverlayEnabled;\n  };\n\n  _render = (transitionProps, lastTransitionProps) => {\n    const { screenProps, navigationConfig } = this.props;\n    return (\n      <StackViewLayout\n        {...navigationConfig}\n        shadowEnabled={this._getShadowEnabled()}\n        cardOverlayEnabled={this._getCardOverlayEnabled()}\n        onGestureBegin={this.props.onGestureBegin}\n        onGestureCanceled={this.props.onGestureCanceled}\n        onGestureEnd={this.props.onGestureEnd}\n        screenProps={screenProps}\n        descriptors={this.props.descriptors}\n        transitionProps={transitionProps}\n        lastTransitionProps={lastTransitionProps}\n      />\n    );\n  };\n\n  _onTransitionEnd = (transition, lastTransition) => {\n    const {\n      navigationConfig,\n      navigation,\n      onTransitionEnd = navigationConfig.onTransitionEnd,\n    } = this.props;\n    const transitionDestKey = transition.scene.route.key;\n    const isCurrentKey =\n      navigation.state.routes[navigation.state.index].key === transitionDestKey;\n    if (transition.navigation.state.isTransitioning && isCurrentKey) {\n      navigation.dispatch(\n        StackActions.completeTransition({\n          key: navigation.state.key,\n          toChildKey: transitionDestKey,\n        })\n      );\n    }\n    onTransitionEnd && onTransitionEnd(transition, lastTransition);\n  };\n}\n\nexport default StackView;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}