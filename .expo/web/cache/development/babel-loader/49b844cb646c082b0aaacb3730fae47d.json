{"ast":null,"code":"var validateFormat = function validateFormat() {};\n\nif (__DEV__) {\n  validateFormat = function validateFormat(format) {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  };\n}\n\nfunction invariant(condition, format, a, b, c, d, e, f) {\n  validateFormat(format);\n\n  if (!condition) {\n    var error;\n\n    if (format === undefined) {\n      error = new Error('Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.');\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(format.replace(/%s/g, function () {\n        return args[argIndex++];\n      }));\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1;\n    throw error;\n  }\n}\n\nmodule.exports = invariant;","map":{"version":3,"names":["validateFormat","__DEV__","format","undefined","Error","invariant","condition","a","b","c","d","e","f","error","args","argIndex","replace","name","framesToPop","module","exports"],"sources":["C:/Users/mike/Desktop/ha/DrawingKid_Expo_20210705/node_modules/@react-navigation/native/dist/utils/invariant.js"],"sourcesContent":["/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar validateFormat = function () {};\n\nif (__DEV__) {\n  validateFormat = function (format) {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  };\n}\n\nfunction invariant(condition, format, a, b, c, d, e, f) {\n  validateFormat(format);\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error('Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.');\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(format.replace(/%s/g, function () {\n        return args[argIndex++];\n      }));\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n}\n\n// eslint-disable-next-line import/no-commonjs\nmodule.exports = invariant;"],"mappings":"AAWA,IAAIA,cAAc,GAAG,0BAAY,CAAE,CAAnC;;AAEA,IAAIC,OAAJ,EAAa;EACXD,cAAc,GAAG,wBAAUE,MAAV,EAAkB;IACjC,IAAIA,MAAM,KAAKC,SAAf,EAA0B;MACxB,MAAM,IAAIC,KAAJ,CAAU,8CAAV,CAAN;IACD;EACF,CAJD;AAKD;;AAED,SAASC,SAAT,CAAmBC,SAAnB,EAA8BJ,MAA9B,EAAsCK,CAAtC,EAAyCC,CAAzC,EAA4CC,CAA5C,EAA+CC,CAA/C,EAAkDC,CAAlD,EAAqDC,CAArD,EAAwD;EACtDZ,cAAc,CAACE,MAAD,CAAd;;EAEA,IAAI,CAACI,SAAL,EAAgB;IACd,IAAIO,KAAJ;;IACA,IAAIX,MAAM,KAAKC,SAAf,EAA0B;MACxBU,KAAK,GAAG,IAAIT,KAAJ,CAAU,+HAAV,CAAR;IACD,CAFD,MAEO;MACL,IAAIU,IAAI,GAAG,CAACP,CAAD,EAAIC,CAAJ,EAAOC,CAAP,EAAUC,CAAV,EAAaC,CAAb,EAAgBC,CAAhB,CAAX;MACA,IAAIG,QAAQ,GAAG,CAAf;MACAF,KAAK,GAAG,IAAIT,KAAJ,CAAUF,MAAM,CAACc,OAAP,CAAe,KAAf,EAAsB,YAAY;QAClD,OAAOF,IAAI,CAACC,QAAQ,EAAT,CAAX;MACD,CAFiB,CAAV,CAAR;MAGAF,KAAK,CAACI,IAAN,GAAa,qBAAb;IACD;;IAEDJ,KAAK,CAACK,WAAN,GAAoB,CAApB;IACA,MAAML,KAAN;EACD;AACF;;AAGDM,MAAM,CAACC,OAAP,GAAiBf,SAAjB"},"metadata":{},"sourceType":"script"}