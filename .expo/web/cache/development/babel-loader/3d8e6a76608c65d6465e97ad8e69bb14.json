{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TouchableNativeFeedback from \"react-native-web/dist/exports/TouchableNativeFeedback\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport BorderlessButton from \"./BorderlessButton\";\nvar ANDROID_VERSION_LOLLIPOP = 21;\n\nvar TouchableItem = function (_React$Component) {\n  _inherits(TouchableItem, _React$Component);\n\n  var _super = _createSuper(TouchableItem);\n\n  function TouchableItem() {\n    _classCallCheck(this, TouchableItem);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(TouchableItem, [{\n    key: \"render\",\n    value: function render() {\n      if (Platform.OS === 'android' && Platform.Version >= ANDROID_VERSION_LOLLIPOP) {\n        var _this$props = this.props,\n            style = _this$props.style,\n            rest = _objectWithoutProperties(_this$props, [\"style\"]);\n\n        return React.createElement(TouchableNativeFeedback, _extends({}, rest, {\n          style: null,\n          background: TouchableNativeFeedback.Ripple(this.props.pressColor, this.props.borderless)\n        }), React.createElement(View, {\n          style: style\n        }, React.Children.only(this.props.children)));\n      } else if (Platform.OS === 'ios') {\n        return React.createElement(BorderlessButton, _extends({\n          hitSlop: {\n            top: 10,\n            bottom: 10,\n            right: 10,\n            left: 10\n          },\n          disallowInterruption: true,\n          enabled: !this.props.disabled\n        }, this.props), this.props.children);\n      } else {\n        return React.createElement(TouchableOpacity, this.props, this.props.children);\n      }\n    }\n  }]);\n\n  return TouchableItem;\n}(React.Component);\n\nTouchableItem.defaultProps = {\n  borderless: false,\n  pressColor: 'rgba(0, 0, 0, .32)'\n};\nexport { TouchableItem as default };","map":{"version":3,"names":["React","BorderlessButton","ANDROID_VERSION_LOLLIPOP","TouchableItem","Platform","OS","Version","props","style","rest","TouchableNativeFeedback","Ripple","pressColor","borderless","Children","only","children","top","bottom","right","left","disabled","Component","defaultProps"],"sources":["C:/Users/mike/Desktop/ha/DrawingKid_Expo_20210705/node_modules/react-navigation-stack/src/views/TouchableItem.js"],"sourcesContent":["/**\n * TouchableItem renders a touchable that looks native on both iOS and Android.\n *\n * It provides an abstraction on top of TouchableNativeFeedback and\n * TouchableOpacity.\n *\n * On iOS you can pass the props of TouchableOpacity, on Android pass the props\n * of TouchableNativeFeedback.\n */\nimport React from 'react';\nimport {\n  Platform,\n  TouchableNativeFeedback,\n  TouchableOpacity,\n  View,\n} from 'react-native';\n\nimport BorderlessButton from './BorderlessButton';\n\nconst ANDROID_VERSION_LOLLIPOP = 21;\n\nexport default class TouchableItem extends React.Component {\n  static defaultProps = {\n    borderless: false,\n    pressColor: 'rgba(0, 0, 0, .32)',\n  };\n\n  render() {\n    /*\n     * TouchableNativeFeedback.Ripple causes a crash on old Android versions,\n     * therefore only enable it on Android Lollipop and above.\n     *\n     * All touchables on Android should have the ripple effect according to\n     * platform design guidelines.\n     * We need to pass the background prop to specify a borderless ripple effect.\n     */\n    if (\n      Platform.OS === 'android' &&\n      Platform.Version >= ANDROID_VERSION_LOLLIPOP\n    ) {\n      const { style, ...rest } = this.props;\n      return (\n        <TouchableNativeFeedback\n          {...rest}\n          style={null}\n          background={TouchableNativeFeedback.Ripple(\n            this.props.pressColor,\n            this.props.borderless\n          )}\n        >\n          <View style={style}>{React.Children.only(this.props.children)}</View>\n        </TouchableNativeFeedback>\n      );\n    } else if (Platform.OS === 'ios') {\n      return (\n        <BorderlessButton\n          hitSlop={{ top: 10, bottom: 10, right: 10, left: 10 }}\n          disallowInterruption\n          enabled={!this.props.disabled}\n          {...this.props}\n        >\n          {this.props.children}\n        </BorderlessButton>\n      );\n    } else {\n      return (\n        <TouchableOpacity {...this.props}>\n          {this.props.children}\n        </TouchableOpacity>\n      );\n    }\n  }\n}\n"],"mappings":";;;;;;;;;;;;AASA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAQA,OAAOC,gBAAP;AAEA,IAAMC,wBAAwB,GAAG,EAAjC;;IAEqBC,a;;;;;;;;;;;;;6BAMV;MASP,IACEC,QAAQ,CAACC,EAAT,KAAgB,SAAhB,IACAD,QAAQ,CAACE,OAAT,IAAoBJ,wBAFtB,EAGE;QAAA,kBAC2B,KAAKK,KADhC;QAAA,IACQC,KADR,eACQA,KADR;QAAA,IACkBC,IADlB;;QAEA,OACE,oBAAC,uBAAD,eACMA,IADN;UAEE,KAAK,EAAE,IAFT;UAGE,UAAU,EAAEC,uBAAuB,CAACC,MAAxB,CACV,KAAKJ,KAAL,CAAWK,UADD,EAEV,KAAKL,KAAL,CAAWM,UAFD;QAHd,IAQE,oBAAC,IAAD;UAAM,KAAK,EAAEL;QAAb,GAAqBR,KAAK,CAACc,QAAN,CAAeC,IAAf,CAAoB,KAAKR,KAAL,CAAWS,QAA/B,CAArB,CARF,CADF;MAYD,CAjBD,MAiBO,IAAIZ,QAAQ,CAACC,EAAT,KAAgB,KAApB,EAA2B;QAChC,OACE,oBAAC,gBAAD;UACE,OAAO,EAAE;YAAEY,GAAG,EAAE,EAAP;YAAWC,MAAM,EAAE,EAAnB;YAAuBC,KAAK,EAAE,EAA9B;YAAkCC,IAAI,EAAE;UAAxC,CADX;UAEE,oBAAoB,MAFtB;UAGE,OAAO,EAAE,CAAC,KAAKb,KAAL,CAAWc;QAHvB,GAIM,KAAKd,KAJX,GAMG,KAAKA,KAAL,CAAWS,QANd,CADF;MAUD,CAXM,MAWA;QACL,OACE,oBAAC,gBAAD,EAAsB,KAAKT,KAA3B,EACG,KAAKA,KAAL,CAAWS,QADd,CADF;MAKD;IACF;;;;EAlDwChB,KAAK,CAACsB,S;;AAA5BnB,a,CACZoB,Y,GAAe;EACpBV,UAAU,EAAE,KADQ;EAEpBD,UAAU,EAAE;AAFQ,C;SADHT,a"},"metadata":{},"sourceType":"module"}