{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nexport default (function (Navigator, navigatorConfig) {\n  var _class;\n\n  return _class = function (_React$Component) {\n    _inherits(KeyboardAwareNavigator, _React$Component);\n\n    var _super = _createSuper(KeyboardAwareNavigator);\n\n    function KeyboardAwareNavigator() {\n      var _this;\n\n      _classCallCheck(this, KeyboardAwareNavigator);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = _super.call.apply(_super, [this].concat(args));\n      _this._previouslyFocusedTextInput = null;\n\n      _this._handleGestureBegin = function () {\n        _this._previouslyFocusedTextInput = TextInput.State.currentlyFocusedField();\n\n        if (_this._previouslyFocusedTextInput) {\n          TextInput.State.blurTextInput(_this._previouslyFocusedTextInput);\n        }\n\n        _this.props.onGestureBegin && _this.props.onGestureBegin();\n      };\n\n      _this._handleGestureCanceled = function () {\n        if (_this._previouslyFocusedTextInput) {\n          TextInput.State.focusTextInput(_this._previouslyFocusedTextInput);\n        }\n\n        _this.props.onGestureCanceled && _this.props.onGestureCanceled();\n      };\n\n      _this._handleGestureEnd = function () {\n        _this._previouslyFocusedTextInput = null;\n        _this.props.onGestureFinish && _this.props.onGestureFinish();\n      };\n\n      _this._handleTransitionStart = function (transitionProps, prevTransitionProps) {\n        if (transitionProps.index !== prevTransitionProps.index) {\n          var currentField = TextInput.State.currentlyFocusedField();\n\n          if (currentField) {\n            TextInput.State.blurTextInput(currentField);\n          }\n        }\n\n        var onTransitionStart = _this.props.onTransitionStart || navigatorConfig.onTransitionStart;\n        onTransitionStart && onTransitionStart(transitionProps, prevTransitionProps);\n      };\n\n      return _this;\n    }\n\n    _createClass(KeyboardAwareNavigator, [{\n      key: \"render\",\n      value: function render() {\n        return React.createElement(Navigator, _extends({}, this.props, {\n          onGestureBegin: this._handleGestureBegin,\n          onGestureCanceled: this._handleGestureCanceled,\n          onGestureEnd: this._handleGestureEnd,\n          onTransitionStart: this._handleTransitionStart\n        }));\n      }\n    }]);\n\n    return KeyboardAwareNavigator;\n  }(React.Component), _class.router = Navigator.router, _class.navigationOptions = Navigator.navigationOptions, _class;\n});","map":{"version":3,"names":["React","Navigator","navigatorConfig","_previouslyFocusedTextInput","_handleGestureBegin","TextInput","State","currentlyFocusedField","blurTextInput","props","onGestureBegin","_handleGestureCanceled","focusTextInput","onGestureCanceled","_handleGestureEnd","onGestureFinish","_handleTransitionStart","transitionProps","prevTransitionProps","index","currentField","onTransitionStart","Component","router","navigationOptions"],"sources":["C:/Users/mike/Desktop/ha/DrawingKid_Expo_20210705/node_modules/@react-navigation/native/dist/createKeyboardAwareNavigator.js"],"sourcesContent":["import React from 'react';\nimport { TextInput } from 'react-native';\n\nexport default ((Navigator, navigatorConfig) => class KeyboardAwareNavigator extends React.Component {\n  static router = Navigator.router;\n  static navigationOptions = Navigator.navigationOptions;\n  _previouslyFocusedTextInput = null;\n\n  render() {\n    return <Navigator {...this.props} onGestureBegin={this._handleGestureBegin} onGestureCanceled={this._handleGestureCanceled} onGestureEnd={this._handleGestureEnd} onTransitionStart={this._handleTransitionStart} />;\n  }\n\n  _handleGestureBegin = () => {\n    this._previouslyFocusedTextInput = TextInput.State.currentlyFocusedField();\n    if (this._previouslyFocusedTextInput) {\n      TextInput.State.blurTextInput(this._previouslyFocusedTextInput);\n    }\n    this.props.onGestureBegin && this.props.onGestureBegin();\n  };\n\n  _handleGestureCanceled = () => {\n    if (this._previouslyFocusedTextInput) {\n      TextInput.State.focusTextInput(this._previouslyFocusedTextInput);\n    }\n    this.props.onGestureCanceled && this.props.onGestureCanceled();\n  };\n\n  _handleGestureEnd = () => {\n    this._previouslyFocusedTextInput = null;\n    this.props.onGestureFinish && this.props.onGestureFinish();\n  };\n\n  _handleTransitionStart = (transitionProps, prevTransitionProps) => {\n    // TODO: We should not even have received the transition start event\n    // in the case where the index did not change, I believe. We\n    // should revisit this after 2.0 release.\n    if (transitionProps.index !== prevTransitionProps.index) {\n      const currentField = TextInput.State.currentlyFocusedField();\n      if (currentField) {\n        TextInput.State.blurTextInput(currentField);\n      }\n    }\n\n    const onTransitionStart = this.props.onTransitionStart || navigatorConfig.onTransitionStart;\n    onTransitionStart && onTransitionStart(transitionProps, prevTransitionProps);\n  };\n});"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAGA,gBAAgB,UAACC,SAAD,EAAYC,eAAZ;EAAA;;EAAA;IAAA;;IAAA;;IAAA;MAAA;;MAAA;;MAAA;QAAA;MAAA;;MAAA;MAAA,MAGdC,2BAHc,GAGgB,IAHhB;;MAAA,MASdC,mBATc,GASQ,YAAM;QAC1B,MAAKD,2BAAL,GAAmCE,SAAS,CAACC,KAAV,CAAgBC,qBAAhB,EAAnC;;QACA,IAAI,MAAKJ,2BAAT,EAAsC;UACpCE,SAAS,CAACC,KAAV,CAAgBE,aAAhB,CAA8B,MAAKL,2BAAnC;QACD;;QACD,MAAKM,KAAL,CAAWC,cAAX,IAA6B,MAAKD,KAAL,CAAWC,cAAX,EAA7B;MACD,CAfa;;MAAA,MAiBdC,sBAjBc,GAiBW,YAAM;QAC7B,IAAI,MAAKR,2BAAT,EAAsC;UACpCE,SAAS,CAACC,KAAV,CAAgBM,cAAhB,CAA+B,MAAKT,2BAApC;QACD;;QACD,MAAKM,KAAL,CAAWI,iBAAX,IAAgC,MAAKJ,KAAL,CAAWI,iBAAX,EAAhC;MACD,CAtBa;;MAAA,MAwBdC,iBAxBc,GAwBM,YAAM;QACxB,MAAKX,2BAAL,GAAmC,IAAnC;QACA,MAAKM,KAAL,CAAWM,eAAX,IAA8B,MAAKN,KAAL,CAAWM,eAAX,EAA9B;MACD,CA3Ba;;MAAA,MA6BdC,sBA7Bc,GA6BW,UAACC,eAAD,EAAkBC,mBAAlB,EAA0C;QAIjE,IAAID,eAAe,CAACE,KAAhB,KAA0BD,mBAAmB,CAACC,KAAlD,EAAyD;UACvD,IAAMC,YAAY,GAAGf,SAAS,CAACC,KAAV,CAAgBC,qBAAhB,EAArB;;UACA,IAAIa,YAAJ,EAAkB;YAChBf,SAAS,CAACC,KAAV,CAAgBE,aAAhB,CAA8BY,YAA9B;UACD;QACF;;QAED,IAAMC,iBAAiB,GAAG,MAAKZ,KAAL,CAAWY,iBAAX,IAAgCnB,eAAe,CAACmB,iBAA1E;QACAA,iBAAiB,IAAIA,iBAAiB,CAACJ,eAAD,EAAkBC,mBAAlB,CAAtC;MACD,CA1Ca;;MAAA;IAAA;;IAAA;MAAA;MAAA,yBAKL;QACP,OAAO,oBAAC,SAAD,eAAe,KAAKT,KAApB;UAA2B,cAAc,EAAE,KAAKL,mBAAhD;UAAqE,iBAAiB,EAAE,KAAKO,sBAA7F;UAAqH,YAAY,EAAE,KAAKG,iBAAxI;UAA2J,iBAAiB,EAAE,KAAKE;QAAnL,GAAP;MACD;IAPa;;IAAA;EAAA,EAAqEhB,KAAK,CAACsB,SAA3E,UACPC,MADO,GACEtB,SAAS,CAACsB,MADZ,SAEPC,iBAFO,GAEavB,SAAS,CAACuB,iBAFvB;AAAA,CAAhB"},"metadata":{},"sourceType":"module"}